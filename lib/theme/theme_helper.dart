import 'dart:ui';
import 'package:flutter/material.dart';
import 'package:wallet_wise/core/utils/pref_utils.dart';
import 'package:wallet_wise/core/utils/size_utils.dart';

/// Helper class for managing themes and colors.
class ThemeHelper {
  // The current app theme
  var _appTheme = PrefUtils().getThemeData();

// A map of custom color themes supported by the app
  Map<String, PrimaryColors> _supportedCustomColor = {
    'primary': PrimaryColors()
  };

// A map of color schemes supported by the app
  Map<String, ColorScheme> _supportedColorScheme = {
    'primary': ColorSchemes.primaryColorScheme
  };

  /// Returns the primary colors for the current theme.
  PrimaryColors _getThemeColors() {
    //throw exception to notify given theme is not found or not generated by the generator
    if (!_supportedCustomColor.containsKey(_appTheme)) {
      throw Exception(
          "$_appTheme is not found.Make sure you have added this theme class in JSON Try running flutter pub run build_runner");
    }
    //return theme from map

    return _supportedCustomColor[_appTheme] ?? PrimaryColors();
  }

  /// Returns the current theme data.
  ThemeData _getThemeData() {
    //throw exception to notify given theme is not found or not generated by the generator
    if (!_supportedColorScheme.containsKey(_appTheme)) {
      throw Exception(
          "$_appTheme is not found.Make sure you have added this theme class in JSON Try running flutter pub run build_runner");
    }
    //return theme from map

    var colorScheme =
        _supportedColorScheme[_appTheme] ?? ColorSchemes.primaryColorScheme;
    return ThemeData(
      visualDensity: VisualDensity.standard,
      colorScheme: colorScheme,
      textTheme: TextThemes.textTheme(colorScheme),
      scaffoldBackgroundColor: appTheme.whiteA700,
      elevatedButtonTheme: ElevatedButtonThemeData(
        style: ElevatedButton.styleFrom(
          backgroundColor: colorScheme.primary,
          shape: RoundedRectangleBorder(
            borderRadius: BorderRadius.circular(16.h),
          ),
          visualDensity: const VisualDensity(
            vertical: -4,
            horizontal: -4,
          ),
          padding: EdgeInsets.zero,
        ),
      ),
      outlinedButtonTheme: OutlinedButtonThemeData(
        style: OutlinedButton.styleFrom(
          backgroundColor: Colors.transparent,
          side: BorderSide(
            color: colorScheme.onPrimary,
            width: 1.h,
          ),
          shape: RoundedRectangleBorder(
            borderRadius: BorderRadius.circular(24.h),
          ),
          visualDensity: const VisualDensity(
            vertical: -4,
            horizontal: -4,
          ),
          padding: EdgeInsets.zero,
        ),
      ),
      floatingActionButtonTheme: FloatingActionButtonThemeData(
        backgroundColor: colorScheme.primary,
      ),
      dividerTheme: DividerThemeData(
        thickness: 1,
        space: 1,
        color: appTheme.lime90001.withOpacity(0.35),
      ),
    );
  }

  /// Returns the primary colors for the current theme.
  PrimaryColors themeColor() => _getThemeColors();

  /// Returns the current theme data.
  ThemeData themeData() => _getThemeData();
}

/// Class containing the supported text theme styles.
class TextThemes {
  static TextTheme textTheme(ColorScheme colorScheme) => TextTheme(
        bodyLarge: TextStyle(
          color: colorScheme.primaryContainer,
          fontSize: 16.fSize,
          fontFamily: 'Inter',
          fontWeight: FontWeight.w400,
        ),
        bodyMedium: TextStyle(
          color: appTheme.gray700,
          fontSize: 13.fSize,
          fontFamily: 'Inter',
          fontWeight: FontWeight.w400,
        ),
        bodySmall: TextStyle(
          color: appTheme.lime90001.withOpacity(0.65),
          fontSize: 10.fSize,
          fontFamily: 'Poppins',
          fontWeight: FontWeight.w400,
        ),
        displayLarge: TextStyle(
          color: appTheme.yellow800,
          fontSize: 64.fSize,
          fontFamily: 'Inter',
          fontWeight: FontWeight.w600,
        ),
        displayMedium: TextStyle(
          color: appTheme.gray50,
          fontSize: 48.fSize,
          fontFamily: 'Inter',
          fontWeight: FontWeight.w500,
        ),
        displaySmall: TextStyle(
          color: appTheme.whiteA700,
          fontSize: 35.fSize,
          fontFamily: 'Inter',
          fontWeight: FontWeight.w300,
        ),
        headlineLarge: TextStyle(
          color: appTheme.whiteA700,
          fontSize: 32.fSize,
          fontFamily: 'Poppins',
          fontWeight: FontWeight.w600,
        ),
        headlineMedium: TextStyle(
          color: colorScheme.primary,
          fontSize: 28.fSize,
          fontFamily: 'Noto Sans Javanese',
          fontWeight: FontWeight.w700,
        ),
        headlineSmall: TextStyle(
          color: appTheme.black900,
          fontSize: 24.fSize,
          fontFamily: 'Inter',
          fontWeight: FontWeight.w600,
        ),
        labelLarge: TextStyle(
          color: colorScheme.primaryContainer,
          fontSize: 13.fSize,
          fontFamily: 'Inter',
          fontWeight: FontWeight.w500,
        ),
        labelMedium: TextStyle(
          color: appTheme.gray400,
          fontSize: 10.fSize,
          fontFamily: 'Inter',
          fontWeight: FontWeight.w500,
        ),
        titleLarge: TextStyle(
          color: appTheme.whiteA700,
          fontSize: 20.fSize,
          fontFamily: 'Inter',
          fontWeight: FontWeight.w600,
        ),
        titleMedium: TextStyle(
          color: appTheme.blueGray900,
          fontSize: 16.fSize,
          fontFamily: 'Inter',
          fontWeight: FontWeight.w500,
        ),
        titleSmall: TextStyle(
          color: appTheme.black900,
          fontSize: 14.fSize,
          fontFamily: 'Inter',
          fontWeight: FontWeight.w500,
        ),
      );
}

/// Class containing the supported color schemes.
class ColorSchemes {
  static final primaryColorScheme = ColorScheme.light(
    // Primary colors
    primary: Color(0XFF392800),
    primaryContainer: Color(0XFF90909F),
    secondaryContainer: Color(0X94392800),

    // Error colors
    errorContainer: Color(0XFF015D11),
    onErrorContainer: Color(0XFF090600),

    // On colors(text colors)
    onPrimary: Color(0XFFE3E5E5),
    onPrimaryContainer: Color(0XFF181818),
  );
}

/// Class containing custom colors for a primary theme.
class PrimaryColors {
  // Amber
  Color get amber600 => Color(0XFFEBB800);
  Color get amberA700 => Color(0XFFFCAC12);

  // Black
  Color get black900 => Color(0XFF0D0E0F);
  Color get black90001 => Color(0XFF000000);

  // Blue
  Color get blue100 => Color(0XFFBCDBFF);

  // BlueGray
  Color get blueGray200 => Color(0XFFADB5BD);
  Color get blueGray400 => Color(0XFF8A868C);
  Color get blueGray40001 => Color(0XFF888888);
  Color get blueGray500 => Color(0XFF438883);
  Color get blueGray900 => Color(0XFF292B2D);
  Color get blueGray90001 => Color(0XFF363737);

  // Cyan
  Color get cyan800 => Color(0XFF017E86);

  // DeepOrange
  Color get deepOrange200 => Color(0XFFFFA6A6);
  Color get deepOrangeA100 => Color(0XFFFFAA7B);

  // DeepPurple
  Color get deepPurple50 => Color(0XFFEEE5FF);
  Color get deepPurpleA200 => Color(0XFF7E3DFF);

  // Gray
  Color get gray100 => Color(0XFFF4F6F6);
  Color get gray10001 => Color(0XFFF1F1FA);
  Color get gray200 => Color(0XFFEEEEEE);
  Color get gray300 => Color(0XFFDDD9D6);
  Color get gray30001 => Color(0XFFDDDDDD);
  Color get gray400 => Color(0XFFC5C5C5);
  Color get gray50 => Color(0XFFFBFBFB);
  Color get gray500 => Color(0XFFA6A8AB);
  Color get gray50001 => Color(0XFF918B8B);
  Color get gray600 => Color(0XFF807C80);
  Color get gray700 => Color(0XFF666666);
  Color get gray800 => Color(0XFF424242);
  Color get gray900 => Color(0XFF281C00);
  Color get gray90001 => Color(0XFF222222);
  Color get gray90002 => Color(0XFF212224);
  Color get gray90003 => Color(0XFF251919);

  // GrayCc
  Color get gray100Cc => Color(0XCCF2F3F3);

  // Green
  Color get green400 => Color(0XFF4CD964);
  Color get green600 => Color(0XFF24A869);
  Color get green800 => Color(0XFF0B851F);

  // LightBlue
  Color get lightBlueA700 => Color(0XFF0077FF);

  // LightGreen
  Color get lightGreen900 => Color(0XFF5D4203);
  Color get lightGreen90001 => Color(0XFF583F04);

  // Lime
  Color get lime900 => Color(0XFF9F7000);
  Color get lime90001 => Color(0XFF6A5931);

  // Orange
  Color get orange50 => Color(0XFFFCEED3);

  // Red
  Color get red500 => Color(0XFFFD3C4A);
  Color get redA200 => Color(0XFFFF5C5C);
  Color get redA700 => Color(0XFFC40000);

  // Teal
  Color get teal50 => Color(0XFFCFF9EA);
  Color get teal500 => Color(0XFF00A86B);

  // White
  Color get whiteA700 => Color(0XFFFFFFFF);

  // Yellow
  Color get yellow800 => Color(0XFFE9AB17);
}

PrimaryColors get appTheme => ThemeHelper().themeColor();
ThemeData get theme => ThemeHelper().themeData();
